agb.list <- SummaryTables(agb, world = TRUE)
burneda.list <- SummaryTables(burneda, world = TRUE)
df
## difference between fire and no fire
try(
fire_no_fire.df <- data.frame(year = df$year[df$scenario %in% 'ctl_fire'],
ssp = df$ssp[df$scenario %in% 'ctl_fire'],
diff_mean = df$mean[df$scenario %in% 'ctl_fire'] -
df$mean[df$scenario %in% 'ctl'],
diff_ci95 = abs(df$ci95[df$scenario %in% 'ctl_fire'] -
df$ci95[df$scenario %in% 'ctl']))
)
## difference between fire and no fire
tryCatch(
fire_no_fire.df <- data.frame(year = df$year[df$scenario %in% 'ctl_fire'],
ssp = df$ssp[df$scenario %in% 'ctl_fire'],
diff_mean = df$mean[df$scenario %in% 'ctl_fire'] -
df$mean[df$scenario %in% 'ctl'],
diff_ci95 = abs(df$ci95[df$scenario %in% 'ctl_fire'] -
df$ci95[df$scenario %in% 'ctl']))
)
SummaryTables <- function(df, world){
df$scenario[df$scenario %in% paste0('ssp', c('126', '245', '370', '585'), '_restor_cl_fire')] <-
paste0('ssp', c('126', '245', '370', '585'), '_restor_cl')
df$CONTINENT[df$CONTINENT %in% 'Seven seas (open ocean)'] <- 'Africa'
df$ssp[df$year > 1970] <- substr(df$scenario[df$year > 1970], start = 1, stop = 6)
df$scenario[df$year > 1970] <- substring(df$scenario[df$year > 1970],first = 8)
if (world){
df$CONTINENT <- '1'
}
df <- aggregate.data.frame(df[,'value'], by = list(continent = df$CONTINENT,
ssp = df$ssp,
year = df$year,
scenario = df$scenario,
statistic = df$statistic), FUN = 'sum')
df <- reshape2::dcast(df, year + ssp + scenario ~ statistic, fun.aggregate = sum)
fire_no_fire.df <- data.frame()
restorgains_nofire.df <- data.frame()
## difference between fire and no fire
try(
fire_no_fire.df <- data.frame(year = df$year[df$scenario %in% 'ctl_fire'],
ssp = df$ssp[df$scenario %in% 'ctl_fire'],
diff_mean = df$mean[df$scenario %in% 'ctl_fire'] -
df$mean[df$scenario %in% 'ctl'],
diff_ci95 = abs(df$ci95[df$scenario %in% 'ctl_fire'] -
df$ci95[df$scenario %in% 'ctl']))
)
try(
## difference restoration and ctl (without fire)
restorgains_nofire.df <- data.frame(year = df$year[df$scenario %in% 'restor'],
ssp = df$ssp[df$scenario %in% 'restor'],
diff_mean = df$mean[df$scenario %in% 'restor'] -
df$mean[df$scenario %in% 'ctl' & df$year > 1970],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor'] -
df$ci95[df$scenario %in% 'ctl' & df$year > 1970]))
)
## difference restoration and ctl (with fire)
restorgains.df <- data.frame(year = df$year[df$scenario %in% 'restor_fire'],
ssp = df$ssp[df$scenario %in% 'restor_fire'],
diff_mean = df$mean[df$scenario %in% 'restor_fire'] -
df$mean[df$scenario %in% 'ctl_fire' & df$year > 1970],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor_fire'] -
df$ci95[df$scenario %in% 'ctl_fire' & df$year > 1970]))
## restoration gains under limted CO2
restorgains_co2_2014.df <- data.frame(year = df$year[df$scenario %in% 'restor_fixco2_2014_fire'],
ssp = df$ssp[df$scenario %in% 'restor_fixco2_2014_fire'],
diff_mean = df$mean[df$scenario %in% 'restor_fixco2_2014_fire'] -
df$mean[df$scenario %in% 'ctl_fire' & df$year > 1970],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor_fixco2_2014_fire'] -
df$ci95[df$scenario %in% 'ctl_fire' & df$year > 1970]))
## restoration gains under no CO2
restorgains_co2_1850.df <- data.frame(year = df$year[df$scenario %in% 'restor_fixco2_1850_fire'],
ssp = df$ssp[df$scenario %in% 'restor_fixco2_1850_fire'],
diff_mean = df$mean[df$scenario %in% 'restor_fixco2_1850_fire'] -
df$mean[df$scenario %in% 'ctl_fire' & df$year > 1970],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor_fixco2_1850_fire'] -
df$ci95[df$scenario %in% 'ctl_fire' & df$year > 1970]))
## difference restoration fire and no fire (i.e. fire suppression)
fire_suppr.df <- data.frame()
climate.df <- data.frame()
try(
fire_suppr.df <- data.frame(year = df$year[df$scenario %in% 'restor'],
ssp = df$ssp[df$scenario %in% 'restor'],
diff_mean = df$mean[df$scenario %in% 'restor'] -
df$mean[df$scenario %in% 'restor_fire'],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor'] -
df$ci95[df$scenario %in% 'restor_fire']))
)
try(
## impact of climate response on restoration
climate.df <- data.frame(year = df$year[df$scenario %in% 'restor_cl'],
ssp = df$ssp[df$scenario %in% 'restor_cl'],
diff_mean = df$mean[df$scenario %in% 'restor_cl'] -
df$mean[df$scenario %in% 'restor'],
diff_ci95 = abs(df$ci95[df$scenario %in% 'restor_cl'] -
df$ci95[df$scenario %in% 'restor']))
)
output.l <- list(fire_no_fire.df,
restorgains_nofire.df,
restorgains.df,
restorgains_co2_2014.df,
restorgains_co2_1850.df,
fire_suppr.df,
climate.df)
names(output.l) <- c('fire_no_fire',
'restorgains_nofire',
'restorgains',
'restorgains_co2_2014',
'restorgains_co2_1850',
'fire_suppr',
'climate')
return(output.l)
}
burneda.list
1.522093e+17 / 1e15
library(ncdf4)
wdir <- '/home/ucfaako/Documents/future_forests/data/'
source.file <- 'afforestation_mask_tropics_global.nc'
taarget.file <- 'afforestation_area_tropics.nc'
target.file <- 'afforestation_area_tropics.nc'
source.file <- paste0(wdir, 'afforestation_mask_tropics_global.nc')
target.file <- paste0(wdir, 'afforestation_area_tropics.nc')
source.nc <- nc_open(source.file)
nc_close(source.nc)
source.nc <- nc_open(source.file, write = TRUE)
source.nc
var.nc <- ncvar_get(source.nc, 'Band1')
lon <- ncvar_get(source.nc, 'lon')
lat <- ncvar_get(source.nc, 'lat')
lon
lat
var.nc
which(lat==-36.75)
which(lat==-37)
min(max(which(lat <= -37)), min(lat(vector == -37)))
min(max(which(lat <= -37)), min(which(lat == -37)))
NearestIndx <- function(x, value){
indx <- min(max(which(x <= value)), min(which(x == value)))
return(indx)
}
lat_bounds <- c(NearestIndx(lat, -37):NearestIndx(lat,37))
lat_bounds
lon_bounds <- c(NearestIndx(lon, -125):NearestIndx(lon,180))
NearestIndx(lon, -125)
NearestIndx(lon,180)
lon_bounds <- c(NearestIndx(lon, -125):NearestIndx(lon,179.5))
lon_bounds
lat[lat_bounds]
lon[lon_bounds]
lon_bounds <- c(NearestIndx(lon, -125):NearestIndx(lon,179.95))
lon[lon_bounds]
lon <- lon[lon_bounds]
var.nc <- dim(var.nc)
var.nc <- ncvar_get(source.nc, 'Band1')
dim(var.nc)
var.nc <- var.nc[lon_bounds, lat_bounds]
ncvar_put(source.nc, varid = 'Band1', vals = var.nc)
nc_close(source.nc)
source.nc <- nc_open(source.file)
target.nc <- nc_open(target.file, write = TRUE)
var.nc <- ncvar_get(source.nc, 'Band1')
lon <- ncvar_get(source.nc, 'lon')
lat <- ncvar_get(source.nc, 'lat')
NearestIndx <- function(x, value){
indx <- min(max(which(x <= value)), min(which(x == value)))
return(indx)
}
lat_bounds <- c(NearestIndx(lat, -37):NearestIndx(lat,37))
lon_bounds <- c(NearestIndx(lon, -125):NearestIndx(lon,179.95))
lat <- lat[lat_bounds]
lon <- lon[lon_bounds]
var.nc <- var.nc[lon_bounds, lat_bounds]
ncvar_put(target.nc, varid = 'Band1', vals = var.nc)
dim(target.nc)
(target.nc)
lat_bounds <- c(NearestIndx(lat, -36.5):NearestIndx(lat,37))
lat <- lat[lat_bounds]
target.file <- paste0(wdir, 'restoration_mask.nc')
source.nc <- nc_open(source.file)
target.nc <- nc_open(target.file, write = TRUE)
var.nc <- ncvar_get(source.nc, 'Band1')
lon <- ncvar_get(source.nc, 'lon')
lat <- ncvar_get(source.nc, 'lat')
NearestIndx <- function(x, value){
indx <- min(max(which(x <= value)), min(which(x == value)))
return(indx)
}
lat_bounds <- c(NearestIndx(lat, -36.5):NearestIndx(lat,37))
lon_bounds <- c(NearestIndx(lon, -125):NearestIndx(lon,179.95))
lat <- lat[lat_bounds]
lon <- lon[lon_bounds]
var.nc <- var.nc[lon_bounds, lat_bounds]
ncvar_put(target.nc, varid = 'mask', vals = var.nc)
nc_close(target.nc)
nc_close(source.nc)
2020-1850
library(ncdf4); library(ggplot2); library(reshape)
library(terra)
wdir <- '/home/ucfaako/Documents/carbon_offsets/data/'
refor.file <- paste0(wdir, 'cseq_gt_initial_biomass.tif')
refor.r <- rast(refor.file)
plot(refor.r)
## Cook-Patton/Griscom cseq/reforestation layer
refor.file <- paste0(wdir, 'young_forest_sequestration_rate_Griscom_extent_epsg4326-ext_new.tif')
# # savanna/steppe is 1 else currently 0/NA
# savanna.r <- rast(savanna.file)
# classify(savanna.r, matrix(c(0, NA), ncol = 2, byrow = TRUE), include.lowest = TRUE,
#          filename = paste0(wdir, 'savanna_mask.tif'),
#          overwrite =TRUE,
#          wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
# print(paste0(wdir, 'savanna_mask.tif'))
#
#
# ## exclude natural forests from Griscom layers
refor.r <- rast(refor.file)
## AGB
agb.file <- paste0(wdir, 'updated_biomass_2019_scaled.tif')
agb.r <- rast(agb.file)
#
# app(x = refor.r, y = agb.r, function(x, y) y - (x * 30),
#     filename = paste0(wdir, 'cseq_gt_initial_biomass.tif'),
#     overwrite =TRUE,
#     wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
#
## If initial biomass >200 Mg C ha-1, exclude, as too high biomass and not suitable for restoration
## If initial biomass > carbon sequstration x 30, and <200 Mg C ha-1 but >100 Mg C ha-1 use linearly scaled 0-0.5 Cook-Patton
## If initial biomass  >  carbon sequestration x 30, and <100 Mg C ha-1 use 0.5 Cook-Patton
## If initial biomass  < carbon sequestration x 30, then use Cook-Patton
refor.file <- paste0(wdir, 'CP_cseq_rates_scaled.tif')
refor.r <- rast(refor.file)
classify(refor.r, matrix(c(-Inf, 0, 0, 0, Inf, 1), ncol = 3, byrow = TRUE),
include.lowest = TRUE,
filename = paste0(wdir, 'CP_cseq_lt_agb_mask.tif'),
overwrite =TRUE,
wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
agb.r <- rast(agb.file)
m <- matrix(c(c(0, seq(100, 190, 10), 200),
c(100, seq(110, 200, 10), Inf),
c(0.5, seq(0.45, 0, -0.05), 0)), ncol = 3)
refor_mask.file <- paste0(wdir, 'CP_cseq_lt_agb_mask.tif')
scaler.file <- paste0(wdir, 'cseq_scaler.tif')
scaler.r <- rast(scaler.file)
refor.file <- paste0(wdir, 'cseq_gt_initial_biomass.tif')
refor.r <- rast(refor.file)
#
# app(x = refor.r, y = agb.r, function(x, y) y - (x * 30),
#     filename = paste0(wdir, 'cseq_gt_initial_biomass.tif'),
#     overwrite =TRUE,
#     wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
#
## If initial biomass >200 Mg C ha-1, exclude, as too high biomass and not suitable for restoration
## If initial biomass > carbon sequstration x 30, and <200 Mg C ha-1 but >100 Mg C ha-1 use linearly scaled 0-0.5 Cook-Patton
## If initial biomass  >  carbon sequestration x 30, and <100 Mg C ha-1 use 0.5 Cook-Patton
## If initial biomass  < carbon sequestration x 30, then use Cook-Patton
refor.file <- paste0(wdir, 'CP_cseq_rates_scaled.tif')
refor.r <- rast(refor.file)
classify(refor.r, matrix(c(-Inf, 0, 1, 0, Inf, 0), ncol = 3, byrow = TRUE),
include.lowest = TRUE,
filename = paste0(wdir, 'CP_cseq_gt_agb_mask.tif'),
overwrite =TRUE,
wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
plot(scaler.r)
#
# app(x = refor.r, y = agb.r, function(x, y) y - (x * 30),
#     filename = paste0(wdir, 'cseq_gt_initial_biomass.tif'),
#     overwrite =TRUE,
#     wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
#
## If initial biomass >200 Mg C ha-1, exclude, as too high biomass and not suitable for restoration
## If initial biomass > carbon sequstration x 30, and <200 Mg C ha-1 but >100 Mg C ha-1 use linearly scaled 0-0.5 Cook-Patton
## If initial biomass  >  carbon sequestration x 30, and <100 Mg C ha-1 use 0.5 Cook-Patton
## If initial biomass  < carbon sequestration x 30, then use Cook-Patton
refor.file <- paste0(wdir, 'CP_cseq_gt_initial_biomass.tif')
refor.r <- rast(refor.file)
plot(refor.r)
#
# app(x = refor.r, y = agb.r, function(x, y) y - (x * 30),
#     filename = paste0(wdir, 'cseq_gt_initial_biomass.tif'),
#     overwrite =TRUE,
#     wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
#
## If initial biomass >200 Mg C ha-1, exclude, as too high biomass and not suitable for restoration
## If initial biomass > carbon sequstration x 30, and <200 Mg C ha-1 but >100 Mg C ha-1 use linearly scaled 0-0.5 Cook-Patton
## If initial biomass  >  carbon sequestration x 30, and <100 Mg C ha-1 use 0.5 Cook-Patton
## If initial biomass  < carbon sequestration x 30, then use Cook-Patton
refor.file <- paste0(wdir, 'CP_cseq_gt_agb_mask.tif')
refor.file <- paste0(wdir, 'CP_cseq_gt_agb_mask.tif')
refor.r <- rast(refor.file)
plot(refor.r)
refor.file <- paste0(wdir, 'CP_cseq_lt_agb_mask.tif')
refor.r <- rast(refor.file)
plot(refor.r)
refor_mask.file <- paste0(wdir, 'CP_cseq_lt_agb_mask.tif')
refor_mask.r <- rast(refor_mask.file)
scaler.file <- paste0(wdir, 'cseq_scaler.tif')
scaler.r <- rast(scaler.file)
mask(scaler.r, refor_mask.r, maskvalue = 0, updatevalue = 1,
filename = paste0(wdir, 'cseq_scaler_masked.tif'),
overwrite =TRUE,
wopt = list(progress = TRUE, memfrac = 0.75, gdal = 'COMPRESS=LZW'))
scaler.file <- paste(wdir, 'cseq_scaler_masked.tif')
scaler.r <- rast(scaler.file)
scaler.file <- paste0(wdir, 'cseq_scaler_masked.tif')
scaler.r <- rast(scaler.file)
plot(scaler.r)
refor.file <- paste0(wdir, 'CP_cseq_rates_scaled.tif')
refor.r <- rast(refor.file)
plot(refor.r)
diffmean.df <- rbind(
data.frame(date=mean.df$date[mean.df$scenario=='restor'],
value=mean.df$value[mean.df$scenario=='restor'] - mean.df$value[mean.df$scenario=='ctl'],
lower=mean.df$lower[mean.df$scenario=='restor'] - mean.df$lower[mean.df$scenario=='ctl'],
upper=mean.df$upper[mean.df$scenario=='restor'] - mean.df$upper[mean.df$scenario=='ctl'],
ssp=mean.df$ssp[mean.df$scenario=='restor'], scenario='transient CO2'),
data.frame(date=mean.df$date[mean.df$scenario=='restor_co2_2014'],
value=mean.df$value[mean.df$scenario=='restor_co2_2014'] - mean.df$value[mean.df$scenario=='ctl_co2_2014'],
lower=mean.df$lower[mean.df$scenario=='restor_co2_2014'] - mean.df$lower[mean.df$scenario=='ctl_co2_2014'],
upper=mean.df$upper[mean.df$scenario=='restor_co2_2014'] - mean.df$upper[mean.df$scenario=='ctl_co2_2014'],
ssp=mean.df$ssp[mean.df$scenario=='restor_co2_2014'], scenario='fixed CO2 (2014)'),
data.frame(date=mean.df$date[mean.df$scenario=='restor_co2_1850'],
value=mean.df$value[mean.df$scenario=='restor_co2_1850'] - mean.df$value[mean.df$scenario=='ctl_co2_1850'],
lower=mean.df$lower[mean.df$scenario=='restor_co2_1850'] - mean.df$lower[mean.df$scenario=='ctl_co2_1850'],
upper=mean.df$upper[mean.df$scenario=='restor_co2_1850'] - mean.df$upper[mean.df$scenario=='ctl_co2_1850'],
ssp=mean.df$ssp[mean.df$scenario=='restor_co2_1850'], scenario='transient CO2 (1850)')
)
## FIRST DERIVATIVE
for (s in ssp){
for (sc in unique(diffmean.df$scenario)){
diffmean.df$diff[diffmean.df$ssp==s & diffmean.df$scenario==sc] <- c(0, diff(diffmean.df$value[diffmean.df$ssp==s & diffmean.df$scenario==sc]))
diffmean.df$lower[diffmean.df$ssp==s & diffmean.df$scenario==sc] <- c(0, diff(diffmean.df$lower[diffmean.df$ssp==s & diffmean.df$scenario==sc]))
diffmean.df$upper[diffmean.df$ssp==s & diffmean.df$scenario==sc] <- c(0, diff(diffmean.df$upper[diffmean.df$ssp==s & diffmean.df$scenario==sc]))
}
}
library(zoo)
ggsave(paste0(wdir, 'derivative_',carbon, '_1970-2100_ts.pdf'),
plot = p, device = 'pdf', width = 190, height = 170, units = 'mm', dpi = 300)
## boxplot
library(ggplot2)
ggsave(paste0(wdir, 'derivative_',carbon, '_2014-2100_ts.pdf'),
plot = p, device = 'pdf', width = 190, height = 170, units = 'mm', dpi = 300)
expression(fixed~CO_[2]~'(2014)')
library(terra)
agb <- rast('/home/ucfaako/Documents/future_forests/data/albiomass_1995-2014.nc')
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
plot(sav)
plot(agb)
plot(agb)
agb
agb <- rast('/home/ucfaako/Documents/future_forests/data/albiomass_1995-2014.nc')
plot(agb)
agb * sav
sav <- crop(sav, agb)
sav
agb * sav
agb
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
sav <- crop(sav, agb, snap = 'out')
sav
agb * sav
agb
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
sav <- crop(sav, agb, snap = 'in')
agb * sav
sav
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
sav <- crop(sav, agb, snap = 'near')
agb * sav
sav
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
sav
sav <- ext(sav, -180, 180, -90, 90)
sav <- crop(sav, agb, snap = 'near')
sav
sav <- ext(c(-180, 180, -90, 90))
sav
sav <- rast('/home/ucfaako/Documents/future_forests/data/savanna_30sec.tif')
ext(sav) <- c(-180, 180, -90, 90)
sav <- crop(sav, agb, snap = 'near')
agb * sav
agb_sav <- values(agb * sav)
median(agb_sav, na.rm = TRUE)
mean(agb_sav, na.rm = TRUE)
plot(sav)
plot(agb*sav)
max(agb_sav, na.rm = TRUE)
agb_sav <- agb
agb_sav[agb_sav<25000] <- NA
plot(agb_sav)
agb_sav <- agb
agb_sav <- values(agb * sav)
quantile(agb_sav, na.rm = TRUE)
quantile(agb_sav, c(0.9, 1), na.rm = TRUE)
quantile(agb_sav, c(0.95, 1), na.rm = TRUE)
agb_sav <- agb
agb_sav[agb_sav<10000] <- NA
plot(agb_sav)
agb_sav <- agb
agb_sav[agb_sav>10000] <- NA
plot(agb_sav)
plot(agb*sav)
plot(agb_sav)
agb_sav[agb_sav>11259.20] <- NA
plot(agb_sav)
plot(agb*sav)
agb_sav <- agb
agb_sav[agb_sav>10000] <- NA
plot(agb_sav)
tree <- rast('/home/ucfaako/Documents/future_forests/data/trees.nc')
plot(agb_sav * tree)
tree
tree <- rast('/home/ucfaako/Documents/future_forests/data/trees.nc')
plot(agb_sav * tree)
plot(trees)
plot(tree)
tree <- rast('/home/ucfaako/Documents/future_forests/data/trees.nc')
tree <- rast('/home/ucfaako/Documents/future_forests/data/trees.nc')
plot(agb_sav * tree)
source('/home/ucfaako/Documents/R_code/fun_Utility.R')
library(ncdf4)
nosav.file <- '/home/ucfaako/Documents/future_forests/data/t3_burnedf_nosav_CanESM5_ssp585.nc'
sav.file <- '/home/ucfaako/Documents/future_forests/data/t3_burnedf_sav_CanESM5_ssp585.nc'
nosav.nc <- nc_read(nosav.nc)
nosav.nc <- nc_read(nosav.file)
sav.nc <- nc_read(sav.file)
nosav_2090s.nc <- apply(nosav.nc[,,78:87], 3, mean, na.rm=T)
dim(nosav_2090s.nc)
nosav_2090s.nc <- apply(nosav.nc[,,78:87], 1:2, mean, na.rm=T)
dim(nosav_2090s.nc)
na.omit(nosav_2090s.nc)
length(na.omit(nosav_2090s.nc))
length(nosav_2090s.nc[nosav_2090s.nc>0])
nosav_2090s.nc[nosav_2090s.nc>0]
length(nosav_2090s.nc[!is.na(nosav_2090s.nc) & nosav_2090s.nc>0])
sav_2090s.nc <- apply(sav.nc[,,78:87], 1:2, mean, na.rm=T)
n_sav <- length(sav_2090s.nc[!is.na(sav_2090s.nc) & sav_2090s.nc>0])
n_nosav <- length(nosav_2090s.nc[!is.na(nosav_2090s.nc) & nosav_2090s.nc>0])
n_sav
nosav_2090s.nc <- nosav_2090s.nc[!is.na(nosav_2090s.nc) & nosav_2090s.nc>0]
sav_2090s.nc <- sav_2090s.nc[!is.na(sav_2090s.nc) & sav_2090s.nc>0]
mean(nosav_2090s.nc)
mean(sav_2090s.nc)
var(sav_2090s.nc)
var(nosav_2090s.nc)
var.test(sav_2090s.nc, nosav_2090s.nc)
t.test(sav_2090s.nc, nosav_2090s.nc, var.equal = FALSE)
out <- t.test(sav_2090s.nc, nosav_2090s.nc, var.equal = FALSE)
out$p.value
round(out$p.value, 4)
round(0.005,4)
nosav.file
fname <- gsub(wdir, '', sav.file)
2014+87
library(ncdf4) library(ggplot2)
library(ncdf4); library(ggplot2)
final.df <- reshape::melt.data.frame(final.df, measure.vars = c('nosav_mean', 'sav_mean'))
final.df$variable[final.df$variable=='sav_mean'] <- 'no savanna'
final.df$variable[final.df$variable=='nosav_mean'] <- 'savanna'
yield.file <- '/home/ucfaako/Documents/carbon_offsets/data/inputdata/IMPACT_Base_Results_3.2.1.csv'
commodities.file <- '/home/ucfaako/Documents/carbon_offsets/data/inputdata/IMPACT_Base_Results_3.2.1.csv'
library(data.table); library(terra); library(sf); library(dplyr)
source('/home/ucfaako/Documents/R_code/fun_Utility.R')
##
commodities.df <- fread(paste0(wdir, commodities.file))
wdir <- '/home/ucfaako/Documents/carbon_offsets/data/inputdata/'
commodities.file = 'IMPACT_Base_Results_3.2.1.csv'
##
commodities.df <- fread(paste0(wdir, commodities.file))
commodities.df <- commodities.df[V2 == "'SSP2-NoCC'"]
commodities.df <- commodities.df[V1 == "'PWXAgg -- World Prices'"]
commodities.df[,V4 := NULL]
commodities.df[,V5 := NULL]
names(commodities.df) <- c('Parameter', 'Scenario', 'Commodity', 'Year', 'Price_USD_mt')
commodities.df <- as.data.frame(commodities.df)
unique(commodities.df$Commodity)
## tidy up both names
commodities.df$Year <- as.integer(gsub("'", "", commodities.df$Year))
commodities.df$Commodity <- gsub("'", "", commodities.df$Commodity)
commodities.df$Commodity <- substr(commodities.df$Commodity, 5,nchar(commodities.df$Commodity))
commodities.df <- commodities.df[nchar(commodities.df$Commodity)!=0,]
commodities.df$Commodity
unique(commodities.df$Commodity)
write.csv(data.frame(commodities=commodities.df$Commodity), paste0(wdir, 'commodities.csv'), row.names = F)
write.csv(data.frame(commodities=unique(commodities.df$Commodity)), paste0(wdir, 'commodities.csv'), row.names = F)
final.df$time <- paste0(final.df$time, 's')
if (continent_scale){
final.df <- read.csv(paste0(wdir, 'savanna_burning_continents.csv'))
} else {
final.df <- read.csv(paste0(wdir, 'savanna_burning_global.csv'))
}
final.df <- reshape::melt.data.frame(final.df, measure.vars = c('nosav_mean', 'sav_mean'))
ssp <- c('ssp126', 'ssp245', 'ssp370', 'ssp585')
ssp_labs <- c('SSP1-26', 'SSP2-45', 'SSP3-70', 'SSP5-85')
names(ssp_labs) <- ssp
final.df$variable <- as.character(final.df$variable)
final.df$variable[final.df$variable=='sav_mean'] <- 'no savanna'
final.df$variable[final.df$variable=='nosav_mean'] <- 'savanna'
final.df$variable <- factor(final.df$variable, levels = c('savanna', 'no savanna'))
final.df$time <- paste0(final.df$time, 's')
PrettyTable(rest_mmm.df, variable_name = 'dCarbon_PgC', multiplier = 1e-15, outname = 'dtotc_restor.csv')
diffmean.df[diffmean.df$date==2100,]
3*4
library(ggplot2) # boxplots
df <- read.csv('/home/ucfaako/Documents/future_forests/data/model_coeffs.csv')
df$X <- NULL
df <- reshape::melt.data.frame(df, id.vars = c('model', 'continent', 'type'))
df.summary <- aggregate.data.frame(df$value, by = list(continent=df$continent, variable=df$variable, type=df$type), FUN = mean)
df.summary[df.summary$type=='mean',]
df.summary
df.summary[df.summary$type=='means',]
df.summary[df.summary$type=='qt25',]
df.summary[df.summary$type=='qt75',]
library(ggpubr)
